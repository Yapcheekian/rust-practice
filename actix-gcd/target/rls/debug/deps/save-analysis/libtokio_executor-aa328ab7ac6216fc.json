{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10","program":"/Users/gerardyap/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_executor","/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=aa328ab7ac6216fc","-C","extra-filename=-aa328ab7ac6216fc","--out-dir","/Users/gerardyap/github/rust-practice/actix-gcd/target/rls/debug/deps","-L","dependency=/Users/gerardyap/github/rust-practice/actix-gcd/target/rls/debug/deps","--extern","crossbeam_utils=/Users/gerardyap/github/rust-practice/actix-gcd/target/rls/debug/deps/libcrossbeam_utils-e1350aef593773f2.rmeta","--extern","futures=/Users/gerardyap/github/rust-practice/actix-gcd/target/rls/debug/deps/libfutures-c6b00bba2326a555.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/gerardyap/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/gerardyap/github/rust-practice/actix-gcd/target/rls/debug/deps/libtokio_executor-aa328ab7ac6216fc.rmeta"},"prelude":{"crate_id":{"name":"tokio_executor","disambiguator":[1205581197738507858,0]},"crate_root":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src","external_crates":[{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8160662364186215271,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15508592535294299014,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17322933587189210298,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13179528220501159687,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14405461281750379523,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13415789777365414266,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14087240094303311622,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8480099122681864520,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7455356171819553965,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4032517352972638871,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[100442770310914164,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10836884096018266442,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[8583823352757433821,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16157489773683242703,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6201654522556613481,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15759299131545182078,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[10203585439616027660,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":18,"id":{"name":"crossbeam_utils","disambiguator":[7183905911564529857,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[14638049735851173363,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":20,"id":{"name":"lazy_static","disambiguator":[10204188848385648992,0]}},{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","num":21,"id":{"name":"futures","disambiguator":[16982669053936693662,0]}}],"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":0,"byte_end":2800,"line_start":1,"line_end":68,"column_start":1,"column_end":30}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2600,"byte_end":2605,"line_start":64,"line_end":64,"column_start":17,"column_end":22},"alias_span":null,"name":"enter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2607,"byte_end":2611,"line_start":64,"line_end":64,"column_start":24,"column_end":28},"alias_span":null,"name":"exit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":23},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2613,"byte_end":2618,"line_start":64,"line_end":64,"column_start":30,"column_end":35},"alias_span":null,"name":"Enter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":26},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2620,"byte_end":2630,"line_start":64,"line_end":64,"column_start":37,"column_end":47},"alias_span":null,"name":"EnterError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":263},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2648,"byte_end":2658,"line_start":65,"line_end":65,"column_start":16,"column_end":26},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2678,"byte_end":2686,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"alias_span":null,"name":"Executor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":153},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2705,"byte_end":2716,"line_start":67,"line_end":67,"column_start":18,"column_end":29},"alias_span":null,"name":"set_default","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":134},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2718,"byte_end":2723,"line_start":67,"line_end":67,"column_start":31,"column_end":36},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2725,"byte_end":2737,"line_start":67,"line_end":67,"column_start":38,"column_end":50},"alias_span":null,"name":"with_default","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2739,"byte_end":2754,"line_start":67,"line_end":67,"column_start":52,"column_end":67},"alias_span":null,"name":"DefaultExecutor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":273},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2756,"byte_end":2768,"line_start":67,"line_end":67,"column_start":69,"column_end":81},"alias_span":null,"name":"DefaultGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":212},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2786,"byte_end":2799,"line_start":68,"line_end":68,"column_start":16,"column_end":29},"alias_span":null,"name":"TypedExecutor","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":0,"byte_end":2800,"line_start":1,"line_end":68,"column_start":1,"column_end":30},"name":"","qualname":"::","value":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":62},{"krate":0,"index":78},{"krate":0,"index":92},{"krate":0,"index":159},{"krate":0,"index":208},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256}],"decl_id":null,"docs":" Task execution related traits and utilities.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":0,"byte_end":53,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/ Task execution related traits and utilities.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":120,"byte_end":168,"line_start":4,"line_end":4,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":169,"byte_end":172,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ In the Tokio execution model, futures are lazy. When a future is created, no","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":173,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ work is performed. In order for the work defined by the future to happen,","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":254,"byte_end":331,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ the future must be submitted to an executor. A future that is submitted to","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":332,"byte_end":410,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ an executor is called a \"task\".","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":411,"byte_end":446,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":447,"byte_end":450,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The executor is responsible for ensuring that [`Future::poll`] is called","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":451,"byte_end":527,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ whenever the task is notified. Notification happens when the internal","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":528,"byte_end":601,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ state of a task transitions from *not ready* to *ready*. For example, a","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":602,"byte_end":677,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ socket might have received data and a call to `read` will now be able to","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":678,"byte_end":754,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ succeed.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":755,"byte_end":767,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":768,"byte_end":771,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate provides traits and utilities that are necessary for building an","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":772,"byte_end":851,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ executor, including:","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":852,"byte_end":876,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":877,"byte_end":880,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * The [`Executor`] trait spawns future object onto an executor.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":881,"byte_end":948,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":949,"byte_end":952,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ * The [`TypedExecutor`] trait spawns futures of a specific type onto an","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":953,"byte_end":1028,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/   executor. This is used to be generic over executors that spawn futures","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1029,"byte_end":1105,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/   that are either `Send` or `!Send` or implement executors that apply to","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1106,"byte_end":1182,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/   specific futures.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1183,"byte_end":1206,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1207,"byte_end":1210,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * [`enter`] marks that the current thread is entering an execution","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1211,"byte_end":1281,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/   context. This prevents a second executor from accidentally starting from","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1282,"byte_end":1360,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/   within the context of one that is already running.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1361,"byte_end":1417,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1418,"byte_end":1421,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ * [`DefaultExecutor`] spawns tasks onto the default executor for the current","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1422,"byte_end":1502,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/   context.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1503,"byte_end":1517,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1518,"byte_end":1521,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ * [`Park`] abstracts over blocking and unblocking the current thread.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1522,"byte_end":1595,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1596,"byte_end":1599,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Implementing an executor","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1600,"byte_end":1630,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1631,"byte_end":1634,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Executors should always implement `TypedExecutor`. This usually is the bound","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1635,"byte_end":1715,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ that applications and libraries will use when generic over an executor. See","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1716,"byte_end":1795,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ the [trait documentation][`TypedExecutor`] for more details.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1796,"byte_end":1860,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1861,"byte_end":1864,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If the executor is able to spawn all futures that are `Send`, then the","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1865,"byte_end":1939,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ executor should also implement the `Executor` trait. This trait is rarely","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":1940,"byte_end":2017,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ used directly by applications and libraries. Instead, `tokio::spawn` is","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2018,"byte_end":2093,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ configured to dispatch to type that implements `Executor`.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2094,"byte_end":2156,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2157,"byte_end":2160,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Executor`]: trait.Executor.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2161,"byte_end":2198,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ [`TypedExecutor`]: trait.TypedExecutor.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2199,"byte_end":2246,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/ [`enter`]: fn.enter.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2247,"byte_end":2275,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ [`DefaultExecutor`]: struct.DefaultExecutor.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2276,"byte_end":2328,"line_start":50,"line_end":50,"column_start":1,"column_end":53}},{"value":"/ [`Park`]: park/index.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2329,"byte_end":2358,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/ [`Future::poll`]: https://docs.rs/futures/0.1/futures/future/trait.Future.html#tymethod.poll","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2359,"byte_end":2455,"line_start":52,"line_end":52,"column_start":1,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":23},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3095,"byte_end":3100,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Enter","qualname":"::enter::Enter","value":"Enter {  }","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"decl_id":null,"docs":" Represents an executor context.","sig":null,"attributes":[{"value":"/ Represents an executor context.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":2979,"byte_end":3014,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3015,"byte_end":3018,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ For more details, see [`enter` documentation](fn.enter.html)","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3019,"byte_end":3083,"line_start":12,"line_end":12,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":26},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3260,"byte_end":3270,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"EnterError","qualname":"::enter::EnterError","value":"EnterError {  }","parent":null,"children":[{"krate":0,"index":27}],"decl_id":null,"docs":" An error returned by `enter` if an execution scope has already been\n entered.\n","sig":null,"attributes":[{"value":"/ An error returned by `enter` if an execution scope has already been","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3164,"byte_end":3235,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ entered.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3236,"byte_end":3248,"line_start":19,"line_end":19,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":4281,"byte_end":4286,"line_start":55,"line_end":55,"column_start":8,"column_end":13},"name":"enter","qualname":"::enter::enter","value":"pub fn enter() -> Result<Enter, EnterError>","parent":null,"children":[],"decl_id":null,"docs":" Marks the current thread as being within the dynamic extent of an\n executor.","sig":null,"attributes":[{"value":"/ Marks the current thread as being within the dynamic extent of an","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3803,"byte_end":3872,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"/ executor.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3873,"byte_end":3886,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3887,"byte_end":3890,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Executor implementations should call this function before blocking the","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3891,"byte_end":3965,"line_start":47,"line_end":47,"column_start":1,"column_end":75}},{"value":"/ thread. If `None` is returned, the executor should fail by panicking or","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3966,"byte_end":4041,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"/ taking some other action without blocking the current thread. This prevents","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":4042,"byte_end":4121,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ deadlocks due to multiple executors competing for the same thread.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":4122,"byte_end":4192,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":4193,"byte_end":4196,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Error","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":4197,"byte_end":4208,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":4209,"byte_end":4212,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Returns an error if the current thread is already marked","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":4213,"byte_end":4273,"line_start":54,"line_end":54,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":4838,"byte_end":4842,"line_start":78,"line_end":78,"column_start":8,"column_end":12},"name":"exit","qualname":"::enter::exit","value":"pub fn exit<F: FnOnce() -> R, R>(F) -> R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":5499,"byte_end":5506,"line_start":109,"line_end":109,"column_start":12,"column_end":19},"name":"on_exit","qualname":"<Enter>::on_exit","value":"pub fn on_exit<F>(&mut Self, F) where F: FnOnce() -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Register a callback to be invoked if and when the thread\n ceased to act as an executor.\n","sig":null,"attributes":[{"value":"/ Register a callback to be invoked if and when the thread","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":5389,"byte_end":5449,"line_start":107,"line_end":107,"column_start":5,"column_end":65}},{"value":"/ ceased to act as an executor.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":5454,"byte_end":5487,"line_start":108,"line_end":108,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":5860,"byte_end":5874,"line_start":121,"line_end":121,"column_start":12,"column_end":26},"name":"make_permanent","qualname":"<Enter>::make_permanent","value":"pub fn make_permanent(Self)","parent":null,"children":[],"decl_id":null,"docs":" Treat the remainder of execution on this thread as part of an\n executor; used mostly for thread pool worker threads.","sig":null,"attributes":[{"value":"/ Treat the remainder of execution on this thread as part of an","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":5625,"byte_end":5690,"line_start":116,"line_end":116,"column_start":5,"column_end":70}},{"value":"/ executor; used mostly for thread pool worker threads.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":5695,"byte_end":5752,"line_start":117,"line_end":117,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":5757,"byte_end":5760,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ All registered `on_exit` callbacks are *dropped* without being","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":5765,"byte_end":5831,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ invoked.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":5836,"byte_end":5848,"line_start":120,"line_end":120,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":6049,"byte_end":6057,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Enter>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> Result<F::Item, F::Error>","parent":null,"children":[],"decl_id":null,"docs":" Blocks the thread on the specified future, returning the value with\n which that future completes.\n","sig":null,"attributes":[{"value":"/ Blocks the thread on the specified future, returning the value with","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":5929,"byte_end":6000,"line_start":125,"line_end":125,"column_start":5,"column_end":76}},{"value":"/ which that future completes.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":6005,"byte_end":6037,"line_start":126,"line_end":126,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":263},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7323,"byte_end":7333,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"SpawnError","qualname":"::error::SpawnError","value":"SpawnError {  }","parent":null,"children":[{"krate":0,"index":264}],"decl_id":null,"docs":" Errors returned by `Executor::spawn`.","sig":null,"attributes":[{"value":"/ Errors returned by `Executor::spawn`.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":6837,"byte_end":6878,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":6879,"byte_end":6882,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Spawn errors should represent relatively rare scenarios. Currently, the two","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":6883,"byte_end":6962,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ scenarios represented by `SpawnError` are:","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":6963,"byte_end":7009,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7010,"byte_end":7013,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * An executor being at capacity or full. As such, the executor is not able","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7014,"byte_end":7092,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/   to accept a new future. This error state is expected to be transient.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7093,"byte_end":7168,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ * An executor has been shutdown and can no longer accept new futures. This","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7169,"byte_end":7247,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/   error state is expected to be permanent.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7248,"byte_end":7294,"line_start":12,"line_end":12,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7465,"byte_end":7473,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<SpawnError>::shutdown","value":"pub fn shutdown() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a new `SpawnError` reflecting a shutdown executor failure.\n","sig":null,"attributes":[{"value":"/ Return a new `SpawnError` reflecting a shutdown executor failure.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7384,"byte_end":7453,"line_start":19,"line_end":19,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7623,"byte_end":7634,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<SpawnError>::at_capacity","value":"pub fn at_capacity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a new `SpawnError` reflecting an executor at capacity failure.\n","sig":null,"attributes":[{"value":"/ Return a new `SpawnError` reflecting an executor at capacity failure.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7538,"byte_end":7611,"line_start":24,"line_end":24,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7781,"byte_end":7792,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<SpawnError>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error reflects a shutdown executor failure.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error reflects a shutdown executor failure.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7700,"byte_end":7769,"line_start":29,"line_end":29,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7931,"byte_end":7945,"line_start":35,"line_end":35,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<SpawnError>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error reflects an executor at capacity failure.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error reflects an executor at capacity failure.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7846,"byte_end":7919,"line_start":34,"line_end":34,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":85},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11144,"byte_end":11152,"line_start":67,"line_end":67,"column_start":11,"column_end":19},"name":"Executor","qualname":"::executor::Executor","value":"Executor","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"decl_id":null,"docs":" A value that executes futures.","sig":null,"attributes":[{"value":"/ A value that executes futures.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":8341,"byte_end":8375,"line_start":4,"line_end":4,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":8376,"byte_end":8379,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The [`spawn`] function is used to submit a future to an executor. Once","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":8380,"byte_end":8454,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ submitted, the executor takes ownership of the future and becomes","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":8455,"byte_end":8524,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ responsible for driving the future to completion.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":8525,"byte_end":8578,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":8579,"byte_end":8582,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The strategy employed by the executor to handle the future is less defined","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":8583,"byte_end":8661,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ and is left up to the `Executor` implementation. The `Executor` instance is","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":8662,"byte_end":8741,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ expected to call [`poll`] on the future once it has been notified, however","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":8742,"byte_end":8820,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ the \"when\" and \"how\" can vary greatly.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":8821,"byte_end":8863,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":8864,"byte_end":8867,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ For example, the executor might be a thread pool, in which case a set of","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":8868,"byte_end":8944,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ threads have already been spawned up and the future is inserted into a","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":8945,"byte_end":9019,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ queue. A thread will acquire the future and poll it.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9020,"byte_end":9076,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9077,"byte_end":9080,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The `Executor` trait is only for futures that **are** `Send`. These are most","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9081,"byte_end":9161,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ common. There currently is no trait that describes executors that operate","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9162,"byte_end":9239,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ entirely on the current thread (i.e., are able to spawn futures that are not","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9240,"byte_end":9320,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ `Send`). Note that single threaded executors can still implement `Executor`,","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9321,"byte_end":9401,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ but only futures that are `Send` can be spawned via the trait.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9402,"byte_end":9468,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9469,"byte_end":9472,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This trait is primarily intended to implemented by executors and used to","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9473,"byte_end":9549,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ back `tokio::spawn`. Libraries and applications **may** use this trait to","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9550,"byte_end":9627,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ bound generics, but doing so will limit usage to futures that implement","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9628,"byte_end":9703,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ `Send`. Instead, libraries and applications are recommended to use","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9704,"byte_end":9774,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`TypedExecutor`] as a bound.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9775,"byte_end":9808,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9809,"byte_end":9812,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9813,"byte_end":9825,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9826,"byte_end":9829,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The [`spawn`] function returns `Result` with an error type of `SpawnError`.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9830,"byte_end":9909,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ This error type represents the reason that the executor was unable to spawn","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9910,"byte_end":9989,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ the future. The two current represented scenarios are:","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":9990,"byte_end":10048,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10049,"byte_end":10052,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ * An executor being at capacity or full. As such, the executor is not able","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10053,"byte_end":10131,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/   to accept a new future. This error state is expected to be transient.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10132,"byte_end":10207,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ * An executor has been shutdown and can no longer accept new futures. This","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10208,"byte_end":10286,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/   error state is expected to be permanent.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10287,"byte_end":10333,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10334,"byte_end":10337,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If a caller encounters an at capacity error, the caller should try to shed","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10338,"byte_end":10416,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ load. This can be as simple as dropping the future that was spawned.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10417,"byte_end":10489,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10490,"byte_end":10493,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the caller encounters a shutdown error, the caller should attempt to","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10494,"byte_end":10569,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ gracefully shutdown.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10570,"byte_end":10594,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10595,"byte_end":10598,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10599,"byte_end":10613,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10614,"byte_end":10617,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10618,"byte_end":10629,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10630,"byte_end":10657,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/ # extern crate tokio_executor;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10658,"byte_end":10692,"line_start":52,"line_end":52,"column_start":1,"column_end":35}},{"value":"/ # use tokio_executor::Executor;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10693,"byte_end":10728,"line_start":53,"line_end":53,"column_start":1,"column_end":36}},{"value":"/ # fn docs(my_executor: &mut Executor) {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10729,"byte_end":10772,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10773,"byte_end":10803,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/ my_executor.spawn(Box::new(lazy(|| {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10804,"byte_end":10844,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/     println!(\"running on the executor\");","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10845,"byte_end":10889,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/     Ok(())","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10890,"byte_end":10904,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/ }))).unwrap();","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10905,"byte_end":10923,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ # }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10924,"byte_end":10931,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10932,"byte_end":10950,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10951,"byte_end":10958,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10959,"byte_end":10962,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`spawn`]: #tymethod.spawn","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10963,"byte_end":10993,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/ [`poll`]: https://docs.rs/futures/0.1/futures/future/trait.Future.html#tymethod.poll","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":10994,"byte_end":11082,"line_start":65,"line_end":65,"column_start":1,"column_end":89}},{"value":"/ [`TypedExecutor`]: ../trait.TypedExecutor.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11083,"byte_end":11133,"line_start":66,"line_end":66,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12096,"byte_end":12101,"line_start":95,"line_end":95,"column_start":8,"column_end":13},"name":"spawn","qualname":"::executor::Executor::spawn","value":"pub fn spawn(&mut Self, Box<dyn Future<Item = (), Error = ()> + Send>)\n-> Result<(), SpawnError>","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Spawns a future object to run on this executor.","sig":null,"attributes":[{"value":"/ Spawns a future object to run on this executor.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11159,"byte_end":11210,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11215,"byte_end":11218,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ `future` is passed to the executor, which will begin running it. The","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11223,"byte_end":11295,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ future may run on the current thread or another thread at the discretion","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11300,"byte_end":11376,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the `Executor` implementation.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11381,"byte_end":11418,"line_start":72,"line_end":72,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11423,"byte_end":11426,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11431,"byte_end":11443,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11448,"byte_end":11451,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Implementations are encouraged to avoid panics. However, panics are","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11456,"byte_end":11527,"line_start":76,"line_end":76,"column_start":5,"column_end":76}},{"value":"/ permitted and the caller should check the implementation specific","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11532,"byte_end":11601,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ documentation for more details on possible panics.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11606,"byte_end":11660,"line_start":78,"line_end":78,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11665,"byte_end":11668,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11673,"byte_end":11687,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11692,"byte_end":11695,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11700,"byte_end":11711,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # extern crate futures;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11716,"byte_end":11743,"line_start":83,"line_end":83,"column_start":5,"column_end":32}},{"value":"/ # extern crate tokio_executor;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11748,"byte_end":11782,"line_start":84,"line_end":84,"column_start":5,"column_end":39}},{"value":"/ # use tokio_executor::Executor;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11787,"byte_end":11822,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/ # fn docs(my_executor: &mut Executor) {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11827,"byte_end":11870,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11875,"byte_end":11905,"line_start":87,"line_end":87,"column_start":5,"column_end":35}},{"value":"/ my_executor.spawn(Box::new(lazy(|| {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11910,"byte_end":11950,"line_start":88,"line_end":88,"column_start":5,"column_end":45}},{"value":"/     println!(\"running on the executor\");","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":11955,"byte_end":11999,"line_start":89,"line_end":89,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12004,"byte_end":12018,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/ }))).unwrap();","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12023,"byte_end":12041,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12046,"byte_end":12053,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12058,"byte_end":12076,"line_start":93,"line_end":93,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12081,"byte_end":12088,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13431,"byte_end":13437,"line_start":135,"line_end":135,"column_start":8,"column_end":14},"name":"status","qualname":"::executor::Executor::status","value":"pub fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Provides a best effort **hint** to whether or not `spawn` will succeed.","sig":null,"attributes":[{"value":"/ Provides a best effort **hint** to whether or not `spawn` will succeed.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12223,"byte_end":12298,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12303,"byte_end":12306,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This function may return both false positives **and** false negatives.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12311,"byte_end":12385,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ If `status` returns `Ok`, then a call to `spawn` will *probably*","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12390,"byte_end":12458,"line_start":103,"line_end":103,"column_start":5,"column_end":73}},{"value":"/ succeed, but may fail. If `status` returns `Err`, a call to `spawn` will","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12463,"byte_end":12539,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ *probably* fail, but may succeed.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12544,"byte_end":12581,"line_start":105,"line_end":105,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12586,"byte_end":12589,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This allows a caller to avoid creating the task if the call to `spawn`","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12594,"byte_end":12668,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ has a high likelihood of failing.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12673,"byte_end":12710,"line_start":108,"line_end":108,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12715,"byte_end":12718,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12723,"byte_end":12735,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12740,"byte_end":12743,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This function must not panic. Implementers must ensure that panics do","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12748,"byte_end":12821,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ not happen.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12826,"byte_end":12841,"line_start":113,"line_end":113,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12846,"byte_end":12849,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12854,"byte_end":12868,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12873,"byte_end":12876,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12881,"byte_end":12892,"line_start":117,"line_end":117,"column_start":5,"column_end":16}},{"value":"/ # extern crate futures;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12897,"byte_end":12924,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/ # extern crate tokio_executor;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12929,"byte_end":12963,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/ # use tokio_executor::Executor;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":12968,"byte_end":13003,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ # fn docs(my_executor: &mut Executor) {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13008,"byte_end":13051,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13056,"byte_end":13086,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13091,"byte_end":13094,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ if my_executor.status().is_ok() {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13099,"byte_end":13136,"line_start":124,"line_end":124,"column_start":5,"column_end":42}},{"value":"/     my_executor.spawn(Box::new(lazy(|| {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13141,"byte_end":13185,"line_start":125,"line_end":125,"column_start":5,"column_end":49}},{"value":"/         println!(\"running on the executor\");","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13190,"byte_end":13238,"line_start":126,"line_end":126,"column_start":5,"column_end":53}},{"value":"/         Ok(())","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13243,"byte_end":13261,"line_start":127,"line_end":127,"column_start":5,"column_end":23}},{"value":"/     }))).unwrap();","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13266,"byte_end":13288,"line_start":128,"line_end":128,"column_start":5,"column_end":27}},{"value":"/ } else {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13293,"byte_end":13305,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/     println!(\"the executor is not in a good state\");","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13310,"byte_end":13366,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"/ }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13371,"byte_end":13376,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13381,"byte_end":13388,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13393,"byte_end":13411,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13416,"byte_end":13423,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":267},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14425,"byte_end":14440,"line_start":18,"line_end":18,"column_start":12,"column_end":27},"name":"DefaultExecutor","qualname":"::global::DefaultExecutor","value":"DefaultExecutor {  }","parent":null,"children":[{"krate":0,"index":268}],"decl_id":null,"docs":" Executes futures on the default executor for the current execution context.","sig":null,"attributes":[{"value":"/ Executes futures on the default executor for the current execution context.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":13895,"byte_end":13974,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":13975,"byte_end":13978,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `DefaultExecutor` implements `Executor` and can be used to spawn futures","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":13979,"byte_end":14055,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ without referencing a specific executor.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14056,"byte_end":14100,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14101,"byte_end":14104,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When an executor starts, it sets the `DefaultExecutor` handle to point to an","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14105,"byte_end":14185,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ executor (usually itself) that is used to spawn new tasks.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14186,"byte_end":14248,"line_start":13,"line_end":13,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14249,"byte_end":14252,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current `DefaultExecutor` reference is tracked using a thread-local","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14253,"byte_end":14328,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ variable and is set using `tokio_executor::with_default`","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14329,"byte_end":14389,"line_start":16,"line_end":16,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":273},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14632,"byte_end":14644,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"DefaultGuard","qualname":"::global::DefaultGuard","value":"DefaultGuard {  }","parent":null,"children":[{"krate":0,"index":274}],"decl_id":null,"docs":" Ensures that the executor is removed from the thread-local context\n when leaving the scope. This handles cases that involve panicking.\n","sig":null,"attributes":[{"value":"/ Ensures that the executor is removed from the thread-local context","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14462,"byte_end":14532,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ when leaving the scope. This handles cases that involve panicking.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14533,"byte_end":14603,"line_start":23,"line_end":23,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":15415,"byte_end":15422,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"current","qualname":"<DefaultExecutor>::current","value":"pub fn current() -> DefaultExecutor","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the default executor for the current context.","sig":null,"attributes":[{"value":"/ Returns a handle to the default executor for the current context.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14689,"byte_end":14758,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14763,"byte_end":14766,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Futures may be spawned onto the default executor using this handle.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14771,"byte_end":14842,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14847,"byte_end":14850,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The returned handle will reference whichever executor is configured as","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14855,"byte_end":14929,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ the default **at the time `spawn` is called**. This enables","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14934,"byte_end":14997,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/ `DefaultExecutor::current()` to be called before an execution context is","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":15002,"byte_end":15078,"line_start":36,"line_end":36,"column_start":5,"column_end":81}},{"value":"/ setup, then passed **into** an execution context before it is used.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":15083,"byte_end":15154,"line_start":37,"line_end":37,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":15159,"byte_end":15162,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is also true for sending the handle across threads, so calling","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":15167,"byte_end":15238,"line_start":39,"line_end":39,"column_start":5,"column_end":76}},{"value":"/ `DefaultExecutor::current()` on thread A and then sending the result to","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":15243,"byte_end":15318,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ thread B will _not_ reference the default executor that was set on thread A.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":15323,"byte_end":15403,"line_start":41,"line_end":41,"column_start":5,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19374,"byte_end":19379,"line_start":168,"line_end":168,"column_start":8,"column_end":13},"name":"spawn","qualname":"::global::spawn","value":"pub fn spawn<T>(T) where T: Future<Item = (), Error = ()> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Submits a future for execution on the default executor -- usually a\n threadpool.","sig":null,"attributes":[{"value":"/ Submits a future for execution on the default executor -- usually a","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":17972,"byte_end":18043,"line_start":129,"line_end":129,"column_start":1,"column_end":72}},{"value":"/ threadpool.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18044,"byte_end":18059,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18060,"byte_end":18063,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ Futures are lazy constructs. When they are defined, no work happens. In","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18064,"byte_end":18139,"line_start":132,"line_end":132,"column_start":1,"column_end":76}},{"value":"/ order for the logic defined by the future to be run, the future must be","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18140,"byte_end":18215,"line_start":133,"line_end":133,"column_start":1,"column_end":76}},{"value":"/ spawned on an executor. This function is the easiest way to do so.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18216,"byte_end":18286,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18287,"byte_end":18290,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ This function must be called from an execution context, i.e. from a future","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18291,"byte_end":18369,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ that has been already spawned onto an executor.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18370,"byte_end":18421,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18422,"byte_end":18425,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ Once spawned, the future will execute. The details of how that happens is","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18426,"byte_end":18503,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/ left up to the executor instance. If the executor is a thread pool, the","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18504,"byte_end":18579,"line_start":140,"line_end":140,"column_start":1,"column_end":76}},{"value":"/ future will be pushed onto a queue that a worker thread polls from. If the","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18580,"byte_end":18658,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ executor is a \"current thread\" executor, the future might be polled","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18659,"byte_end":18730,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/ immediately from within the call to `spawn` or it might be pushed onto an","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18731,"byte_end":18808,"line_start":143,"line_end":143,"column_start":1,"column_end":78}},{"value":"/ internal queue.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18809,"byte_end":18828,"line_start":144,"line_end":144,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18829,"byte_end":18832,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18833,"byte_end":18845,"line_start":146,"line_end":146,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18846,"byte_end":18849,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the default executor is not set or if spawning","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18850,"byte_end":18928,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/ onto the default executor returns an error. To avoid the panic, use the","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":18929,"byte_end":19004,"line_start":149,"line_end":149,"column_start":1,"column_end":76}},{"value":"/ `DefaultExecutor` handle directly.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19005,"byte_end":19043,"line_start":150,"line_end":150,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19044,"byte_end":19047,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19048,"byte_end":19062,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19063,"byte_end":19066,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19067,"byte_end":19078,"line_start":154,"line_end":154,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19079,"byte_end":19106,"line_start":155,"line_end":155,"column_start":1,"column_end":28}},{"value":"/ # extern crate tokio_executor;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19107,"byte_end":19141,"line_start":156,"line_end":156,"column_start":1,"column_end":35}},{"value":"/ # use tokio_executor::spawn;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19142,"byte_end":19174,"line_start":157,"line_end":157,"column_start":1,"column_end":33}},{"value":"/ # pub fn dox() {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19175,"byte_end":19195,"line_start":158,"line_end":158,"column_start":1,"column_end":21}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19196,"byte_end":19226,"line_start":159,"line_end":159,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19227,"byte_end":19230,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ spawn(lazy(|| {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19231,"byte_end":19250,"line_start":161,"line_end":161,"column_start":1,"column_end":20}},{"value":"/     println!(\"running on the default executor\");","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19251,"byte_end":19303,"line_start":162,"line_end":162,"column_start":1,"column_end":53}},{"value":"/     Ok(())","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19304,"byte_end":19318,"line_start":163,"line_end":163,"column_start":1,"column_end":15}},{"value":"/ }));","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19319,"byte_end":19327,"line_start":164,"line_end":164,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19328,"byte_end":19335,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19336,"byte_end":19358,"line_start":166,"line_end":166,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19359,"byte_end":19366,"line_start":167,"line_end":167,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19682,"byte_end":19694,"line_start":180,"line_end":180,"column_start":8,"column_end":20},"name":"with_default","qualname":"::global::with_default","value":"pub fn with_default<T, F, R>(&mut T, &mut Enter, F) -> R where T: Executor,\nF: FnOnce(&mut Enter) -> R","parent":null,"children":[],"decl_id":null,"docs":" Set the default executor for the duration of the closure","sig":null,"attributes":[{"value":"/ Set the default executor for the duration of the closure","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19524,"byte_end":19584,"line_start":175,"line_end":175,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19585,"byte_end":19588,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19589,"byte_end":19601,"line_start":177,"line_end":177,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19602,"byte_end":19605,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ This function panics if there already is a default executor set.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":19606,"byte_end":19674,"line_start":179,"line_end":179,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":153},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":21252,"byte_end":21263,"line_start":231,"line_end":231,"column_start":8,"column_end":19},"name":"set_default","qualname":"::global::set_default","value":"pub fn set_default<T>(T) -> DefaultGuard where T: Executor + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets `executor` as the default executor, returning a guard that unsets it when\n dropped.","sig":null,"attributes":[{"value":"/ Sets `executor` as the default executor, returning a guard that unsets it when","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":21059,"byte_end":21141,"line_start":225,"line_end":225,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":21142,"byte_end":21154,"line_start":226,"line_end":226,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":21155,"byte_end":21158,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":21159,"byte_end":21171,"line_start":228,"line_end":228,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":21172,"byte_end":21175,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ This function panics if there already is a default executor set.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":21176,"byte_end":21244,"line_start":230,"line_end":230,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":159},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"park","qualname":"::park","value":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":191},{"krate":0,"index":197},{"krate":0,"index":206}],"decl_id":null,"docs":" Abstraction over blocking and unblocking the current thread.","sig":null,"attributes":[{"value":"/ Abstraction over blocking and unblocking the current thread.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":22852,"byte_end":22916,"line_start":1,"line_end":1,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":22917,"byte_end":22920,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Provides an abstraction over blocking the current thread. This is similar to","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":22921,"byte_end":23001,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ the park / unpark constructs provided by [`std`] but made generic. This","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23002,"byte_end":23077,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ allows embedding custom functionality to perform when the thread is blocked.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23078,"byte_end":23158,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23159,"byte_end":23162,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A blocked [`Park`][p] instance is unblocked by calling [`unpark`] on its","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23163,"byte_end":23239,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ [`Unpark`][up] handle.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23240,"byte_end":23266,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23267,"byte_end":23270,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The [`ParkThread`] struct implements [`Park`][p] using","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23271,"byte_end":23329,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][`std`] to put the thread to sleep. The Tokio reactor also","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23330,"byte_end":23408,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ implements park, but uses [`mio::Poll`][mio] to block the thread instead.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23409,"byte_end":23486,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23487,"byte_end":23490,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The [`Park`][p] trait is composable. A timer implementation might decorate a","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23491,"byte_end":23571,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ [`Park`][p] implementation by checking if any timeouts have elapsed after","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23572,"byte_end":23649,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the inner [`Park`][p] implementation unblocks.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23650,"byte_end":23700,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23701,"byte_end":23704,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Model","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23705,"byte_end":23716,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23717,"byte_end":23720,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Conceptually, each [`Park`][p] instance has an associated token, which is","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23721,"byte_end":23798,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ initially not present:","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23799,"byte_end":23825,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23826,"byte_end":23829,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * The [`park`] method blocks the current thread unless or until the token","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23830,"byte_end":23907,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/   is available, at which point it atomically consumes the token.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23908,"byte_end":23976,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/ * The [`unpark`] method atomically makes the token available if it wasn't","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":23977,"byte_end":24054,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/   already.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24055,"byte_end":24069,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24070,"byte_end":24073,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Some things to note:","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24074,"byte_end":24098,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24099,"byte_end":24102,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * If [`unpark`] is called before [`park`], the next call to [`park`] will","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24103,"byte_end":24180,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ **not** block the thread.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24181,"byte_end":24210,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"/ * **Spurious** wakeups are permitted, i.e., the [`park`] method may unblock","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24211,"byte_end":24290,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/   even if [`unpark`] was not called.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24291,"byte_end":24331,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/ * [`park_timeout`] does the same as [`park`] but allows specifying a maximum","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24332,"byte_end":24412,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/   time to block the thread for.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24413,"byte_end":24448,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24449,"byte_end":24452,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`std`]: https://doc.rust-lang.org/std/thread/fn.park.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24453,"byte_end":24515,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/ [`thread::park`]: https://doc.rust-lang.org/std/thread/fn.park.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24516,"byte_end":24587,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ [`ParkThread`]: struct.ParkThread.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24588,"byte_end":24630,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/ [p]: trait.Park.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24631,"byte_end":24655,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/ [`park`]: trait.Park.html#tymethod.park","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24656,"byte_end":24699,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ [`park_timeout`]: trait.Park.html#tymethod.park_timeout","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24700,"byte_end":24759,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/ [`unpark`]: trait.Unpark.html#tymethod.unpark","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24760,"byte_end":24809,"line_start":43,"line_end":43,"column_start":1,"column_end":50}},{"value":"/ [up]: trait.Unpark.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24810,"byte_end":24837,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ [mio]: https://docs.rs/mio/0.6/mio/struct.Poll.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":24838,"byte_end":24893,"line_start":45,"line_end":45,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":179},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25163,"byte_end":25167,"line_start":59,"line_end":59,"column_start":11,"column_end":15},"name":"Park","qualname":"::park::Park","value":"Park","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":" Block the current thread.","sig":null,"attributes":[{"value":"/ Block the current thread.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25036,"byte_end":25065,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25066,"byte_end":25069,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ See [module documentation][mod] for more details.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25070,"byte_end":25123,"line_start":56,"line_end":56,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25124,"byte_end":25127,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [mod]: ../index.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25128,"byte_end":25152,"line_start":58,"line_end":58,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":180},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25237,"byte_end":25243,"line_start":61,"line_end":61,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25174,"byte_end":25227,"line_start":60,"line_end":60,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":181},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25296,"byte_end":25301,"line_start":64,"line_end":64,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25258,"byte_end":25286,"line_start":63,"line_end":63,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25383,"byte_end":25389,"line_start":67,"line_end":67,"column_start":8,"column_end":14},"name":"unpark","qualname":"::park::Park::unpark","value":"pub fn unpark(&Self) -> Self::Unpark","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Get a new `Unpark` handle associated with this `Park` instance.\n","sig":null,"attributes":[{"value":"/ Get a new `Unpark` handle associated with this `Park` instance.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25308,"byte_end":25375,"line_start":66,"line_end":66,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26036,"byte_end":26040,"line_start":84,"line_end":84,"column_start":8,"column_end":12},"name":"park","qualname":"::park::Park::park","value":"pub fn park(&mut Self) -> Result<(), Self::Error>","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Block the current thread unless or until the token is available.","sig":null,"attributes":[{"value":"/ Block the current thread unless or until the token is available.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25419,"byte_end":25487,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25492,"byte_end":25495,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ A call to `park` does not guarantee that the thread will remain blocked","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25500,"byte_end":25575,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ forever, and callers should be prepared for this possibility. This","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25580,"byte_end":25650,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ function may wakeup spuriously for any reason.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25655,"byte_end":25705,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25710,"byte_end":25713,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ See [module documentation][mod] for more details.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25718,"byte_end":25771,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25776,"byte_end":25779,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25784,"byte_end":25796,"line_start":77,"line_end":77,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25801,"byte_end":25804,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This function **should** not panic, but ultimately, panics are left as","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25809,"byte_end":25883,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ an implementation detail. Refer to the documentation for the specific","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25888,"byte_end":25961,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ `Park` implementation","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25966,"byte_end":25991,"line_start":81,"line_end":81,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":25996,"byte_end":25999,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ [mod]: ../index.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26004,"byte_end":26028,"line_start":83,"line_end":83,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26766,"byte_end":26778,"line_start":104,"line_end":104,"column_start":8,"column_end":20},"name":"park_timeout","qualname":"::park::Park::park_timeout","value":"pub fn park_timeout(&mut Self, Duration) -> Result<(), Self::Error>","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Park the current thread for at most `duration`.","sig":null,"attributes":[{"value":"/ Park the current thread for at most `duration`.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26085,"byte_end":26136,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26141,"byte_end":26144,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This function is the same as `park` but allows specifying a maximum time","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26149,"byte_end":26225,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ to block the thread for.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26230,"byte_end":26258,"line_start":89,"line_end":89,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26263,"byte_end":26266,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Same as `park`, there is no guarantee that the thread will remain","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26271,"byte_end":26340,"line_start":91,"line_end":91,"column_start":5,"column_end":74}},{"value":"/ blocked for any amount of time. Spurious wakeups are permitted for any","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26345,"byte_end":26419,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ reason.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26424,"byte_end":26435,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26440,"byte_end":26443,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ See [module documentation][mod] for more details.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26448,"byte_end":26501,"line_start":95,"line_end":95,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26506,"byte_end":26509,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26514,"byte_end":26526,"line_start":97,"line_end":97,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26531,"byte_end":26534,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function **should** not panic, but ultimately, panics are left as","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26539,"byte_end":26613,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ an implementation detail. Refer to the documentation for the specific","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26618,"byte_end":26691,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ `Park` implementation","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26696,"byte_end":26721,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26726,"byte_end":26729,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [mod]: ../index.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26734,"byte_end":26758,"line_start":103,"line_end":103,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27034,"byte_end":27040,"line_start":113,"line_end":113,"column_start":11,"column_end":17},"name":"Unpark","qualname":"::park::Unpark","value":"Unpark: Sync + Send + 'static","parent":null,"children":[{"krate":0,"index":186}],"decl_id":null,"docs":" Unblock a thread blocked by the associated [`Park`] instance.","sig":null,"attributes":[{"value":"/ Unblock a thread blocked by the associated [`Park`] instance.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26841,"byte_end":26906,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26907,"byte_end":26910,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ See [module documentation][mod] for more details.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26911,"byte_end":26964,"line_start":109,"line_end":109,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26965,"byte_end":26968,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [mod]: ../index.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26969,"byte_end":26993,"line_start":111,"line_end":111,"column_start":1,"column_end":25}},{"value":"/ [`Park`]: trait.Park.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":26994,"byte_end":27023,"line_start":112,"line_end":112,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27590,"byte_end":27596,"line_start":128,"line_end":128,"column_start":8,"column_end":14},"name":"unpark","qualname":"::park::Unpark::unpark","value":"pub fn unpark(&Self)","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Unblock a thread that is blocked by the associated `Park` handle.","sig":null,"attributes":[{"value":"/ Unblock a thread that is blocked by the associated `Park` handle.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27070,"byte_end":27139,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27144,"byte_end":27147,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Calling `unpark` atomically makes available the unpark token, if it is","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27152,"byte_end":27226,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/ not already available.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27231,"byte_end":27257,"line_start":117,"line_end":117,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27262,"byte_end":27265,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ See [module documentation][mod] for more details.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27270,"byte_end":27323,"line_start":119,"line_end":119,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27328,"byte_end":27331,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27336,"byte_end":27348,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27353,"byte_end":27356,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function **should** not panic, but ultimately, panics are left as","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27361,"byte_end":27435,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ an implementation detail. Refer to the documentation for the specific","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27440,"byte_end":27513,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ `Unpark` implementation","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27518,"byte_end":27545,"line_start":125,"line_end":125,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27550,"byte_end":27553,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ [mod]: ../index.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27558,"byte_end":27582,"line_start":127,"line_end":127,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":292},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28333,"byte_end":28343,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"ParkThread","qualname":"::park::ParkThread","value":"ParkThread {  }","parent":null,"children":[{"krate":0,"index":293}],"decl_id":null,"docs":" Blocks the current thread using a condition variable.","sig":null,"attributes":[{"value":"/ Blocks the current thread using a condition variable.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27792,"byte_end":27849,"line_start":143,"line_end":143,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27850,"byte_end":27853,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Implements the [`Park`] functionality by using a condition variable. An","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27854,"byte_end":27929,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ atomic variable is also used to avoid using the condition variable if","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27930,"byte_end":28003,"line_start":146,"line_end":146,"column_start":1,"column_end":74}},{"value":"/ possible.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28004,"byte_end":28017,"line_start":147,"line_end":147,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28018,"byte_end":28021,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ The condition variable is cached in a thread-local variable and is shared","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28022,"byte_end":28099,"line_start":149,"line_end":149,"column_start":1,"column_end":78}},{"value":"/ across all `ParkThread` instances created on the same thread. This also","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28100,"byte_end":28175,"line_start":150,"line_end":150,"column_start":1,"column_end":76}},{"value":"/ means that an instance of `ParkThread` might be unblocked by a handle","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28176,"byte_end":28249,"line_start":151,"line_end":151,"column_start":1,"column_end":74}},{"value":"/ associated with a different `ParkThread` instance.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28250,"byte_end":28304,"line_start":152,"line_end":152,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":296},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28576,"byte_end":28585,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"ParkError","qualname":"::park::ParkError","value":"ParkError {  }","parent":null,"children":[{"krate":0,"index":297}],"decl_id":null,"docs":" Error returned by [`ParkThread`]","sig":null,"attributes":[{"value":"/ Error returned by [`ParkThread`]","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28383,"byte_end":28419,"line_start":158,"line_end":158,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28420,"byte_end":28423,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This currently is never returned, but might at some point in the future.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28424,"byte_end":28500,"line_start":160,"line_end":160,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28501,"byte_end":28504,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ [`ParkThread`]: struct.ParkThread.html","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28505,"byte_end":28547,"line_start":162,"line_end":162,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":300},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28694,"byte_end":28706,"line_start":170,"line_end":170,"column_start":12,"column_end":24},"name":"UnparkThread","qualname":"::park::UnparkThread","value":"UnparkThread {  }","parent":null,"children":[{"krate":0,"index":301}],"decl_id":null,"docs":" Unblocks a thread that was blocked by `ParkThread`.\n","sig":null,"attributes":[{"value":"/ Unblocks a thread that was blocked by `ParkThread`.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28603,"byte_end":28658,"line_start":168,"line_end":168,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":29068,"byte_end":29071,"line_start":185,"line_end":185,"column_start":12,"column_end":15},"name":"new","qualname":"<ParkThread>::new","value":"pub fn new() -> ParkThread","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ParkThread` handle for the current thread.","sig":null,"attributes":[{"value":"/ Create a new `ParkThread` handle for the current thread.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28857,"byte_end":28917,"line_start":181,"line_end":181,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28922,"byte_end":28925,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This type cannot be moved to other threads, so it should be created on","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28930,"byte_end":29004,"line_start":183,"line_end":183,"column_start":5,"column_end":79}},{"value":"/ the thread that the caller intends to park.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":29009,"byte_end":29056,"line_start":184,"line_end":184,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":212},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32268,"byte_end":32281,"line_start":77,"line_end":77,"column_start":11,"column_end":24},"name":"TypedExecutor","qualname":"::typed::TypedExecutor","value":"TypedExecutor<T>","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"decl_id":null,"docs":" A value that spawns futures of a specific type.","sig":null,"attributes":[{"value":"/ A value that spawns futures of a specific type.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30051,"byte_end":30102,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30103,"byte_end":30106,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The trait is generic over `T`: the type of future that can be spawened. This","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30107,"byte_end":30187,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ is useful for implementing an executor that is only able to spawn a specific","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30188,"byte_end":30268,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ type of future.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30269,"byte_end":30288,"line_start":7,"line_end":7,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30289,"byte_end":30292,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The [`spawn`] function is used to submit the future to the executor. Once","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30293,"byte_end":30370,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ submitted, the executor takes ownership of the future and becomes","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30371,"byte_end":30440,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ responsible for driving the future to completion.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30441,"byte_end":30494,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30495,"byte_end":30498,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This trait is useful as a bound for applications and libraries in order to","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30499,"byte_end":30577,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ be generic over futures that are `Send` vs. `!Send`.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30578,"byte_end":30634,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30635,"byte_end":30638,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30639,"byte_end":30653,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30654,"byte_end":30657,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Consider a function that provides an API for draining a `Stream` in the","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30658,"byte_end":30733,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ background. To do this, a task must be spawned to perform the draining. As","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30734,"byte_end":30812,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ such, the function takes a stream and an executor on which the background","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30813,"byte_end":30890,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ task is spawned.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30891,"byte_end":30911,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30912,"byte_end":30915,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30916,"byte_end":30927,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30928,"byte_end":30944,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/ extern crate futures;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30945,"byte_end":30970,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/ extern crate tokio;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30971,"byte_end":30994,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30995,"byte_end":30998,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ use futures::{Future, Stream, Poll};","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":30999,"byte_end":31039,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ use tokio::executor::TypedExecutor;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31040,"byte_end":31079,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31080,"byte_end":31109,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31110,"byte_end":31113,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ pub fn drain<T, E>(stream: T, executor: &mut E)","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31114,"byte_end":31165,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/     -> impl Future<Item = (), Error = ()>","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31166,"byte_end":31211,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/ where","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31212,"byte_end":31221,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/     T: Stream,","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31222,"byte_end":31240,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     E: TypedExecutor<Drain<T>>","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31241,"byte_end":31275,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/ {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31276,"byte_end":31281,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31282,"byte_end":31324,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31325,"byte_end":31328,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/     executor.spawn(Drain {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31329,"byte_end":31359,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/         stream,","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31360,"byte_end":31379,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"/         tx: Some(tx),","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31380,"byte_end":31405,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     }).unwrap();","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31406,"byte_end":31426,"line_start":43,"line_end":43,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31427,"byte_end":31430,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     rx.map_err(|_| ())","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31431,"byte_end":31457,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31458,"byte_end":31463,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31464,"byte_end":31467,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // The background task","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31468,"byte_end":31494,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/ pub struct Drain<T: Stream> {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31495,"byte_end":31528,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/     stream: T,","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31529,"byte_end":31547,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/     tx: Option<oneshot::Sender<()>>,","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31548,"byte_end":31588,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31589,"byte_end":31594,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31595,"byte_end":31598,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl<T: Stream> Future for Drain<T> {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31599,"byte_end":31640,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/     type Item = ();","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31641,"byte_end":31664,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/     type Error = ();","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31665,"byte_end":31689,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31690,"byte_end":31693,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     fn poll(&mut self) -> Poll<Self::Item, Self::Error> {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31694,"byte_end":31755,"line_start":58,"line_end":58,"column_start":1,"column_end":62}},{"value":"/         loop {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31756,"byte_end":31774,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/             let item = try_ready!(","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31775,"byte_end":31813,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/                 self.stream.poll()","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31814,"byte_end":31852,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/                     .map_err(|_| ())","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31853,"byte_end":31893,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/             );","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31894,"byte_end":31912,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31913,"byte_end":31916,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/             if item.is_none() { break; }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31917,"byte_end":31961,"line_start":65,"line_end":65,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31962,"byte_end":31975,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31976,"byte_end":31979,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/         self.tx.take().unwrap().send(()).map_err(|_| ());","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":31980,"byte_end":32041,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/         Ok(().into())","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32042,"byte_end":32067,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32068,"byte_end":32077,"line_start":70,"line_end":70,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32078,"byte_end":32083,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32084,"byte_end":32106,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32107,"byte_end":32114,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32115,"byte_end":32118,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ By doing this, the `drain` fn can accept a stream that is `!Send` as long as","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32119,"byte_end":32199,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"/ the supplied executor is able to spawn `!Send` types.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32200,"byte_end":32257,"line_start":76,"line_end":76,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33492,"byte_end":33497,"line_start":117,"line_end":117,"column_start":8,"column_end":13},"name":"spawn","qualname":"::typed::TypedExecutor::spawn","value":"pub fn spawn(&mut Self, T) -> Result<(), SpawnError>","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":" Spawns a future to run on this executor.","sig":null,"attributes":[{"value":"/ Spawns a future to run on this executor.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32291,"byte_end":32335,"line_start":78,"line_end":78,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32340,"byte_end":32343,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ `future` is passed to the executor, which will begin running it. The","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32348,"byte_end":32420,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"/ executor takes ownership of the future and becomes responsible for","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32425,"byte_end":32495,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ driving the future to completion.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32500,"byte_end":32537,"line_start":82,"line_end":82,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32542,"byte_end":32545,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32550,"byte_end":32562,"line_start":84,"line_end":84,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32567,"byte_end":32570,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Implementations are encouraged to avoid panics. However, panics are","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32575,"byte_end":32646,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ permitted and the caller should check the implementation specific","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32651,"byte_end":32720,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ documentation for more details on possible panics.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32725,"byte_end":32779,"line_start":88,"line_end":88,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32784,"byte_end":32787,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32792,"byte_end":32806,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32811,"byte_end":32814,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32819,"byte_end":32830,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # extern crate futures;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32835,"byte_end":32862,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/ # extern crate tokio_executor;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32867,"byte_end":32901,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # use tokio_executor::TypedExecutor;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32906,"byte_end":32946,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/ # use futures::{Future, Poll};","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32951,"byte_end":32985,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ fn example<T>(my_executor: &mut T)","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":32990,"byte_end":33028,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ where","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33033,"byte_end":33042,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/     T: TypedExecutor<MyFuture>,","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33047,"byte_end":33082,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33087,"byte_end":33092,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/     my_executor.spawn(MyFuture).unwrap();","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33097,"byte_end":33142,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33147,"byte_end":33152,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33157,"byte_end":33160,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33165,"byte_end":33185,"line_start":104,"line_end":104,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33190,"byte_end":33193,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33198,"byte_end":33228,"line_start":106,"line_end":106,"column_start":5,"column_end":35}},{"value":"/     type Item = ();","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33233,"byte_end":33256,"line_start":107,"line_end":107,"column_start":5,"column_end":28}},{"value":"/     type Error = ();","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33261,"byte_end":33285,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33290,"byte_end":33293,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     fn poll(&mut self) -> Poll<(), ()> {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33298,"byte_end":33342,"line_start":110,"line_end":110,"column_start":5,"column_end":49}},{"value":"/         println!(\"running on the executor\");","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33347,"byte_end":33395,"line_start":111,"line_end":111,"column_start":5,"column_end":53}},{"value":"/         Ok(().into())","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33400,"byte_end":33425,"line_start":112,"line_end":112,"column_start":5,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33430,"byte_end":33439,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33444,"byte_end":33449,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33454,"byte_end":33472,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33477,"byte_end":33484,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":35033,"byte_end":35039,"line_start":165,"line_end":165,"column_start":8,"column_end":14},"name":"status","qualname":"::typed::TypedExecutor::status","value":"pub fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":" Provides a best effort **hint** to whether or not `spawn` will succeed.","sig":null,"attributes":[{"value":"/ Provides a best effort **hint** to whether or not `spawn` will succeed.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33552,"byte_end":33627,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33632,"byte_end":33635,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function may return both false positives **and** false negatives.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33640,"byte_end":33714,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ If `status` returns `Ok`, then a call to `spawn` will *probably*","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33719,"byte_end":33787,"line_start":122,"line_end":122,"column_start":5,"column_end":73}},{"value":"/ succeed, but may fail. If `status` returns `Err`, a call to `spawn` will","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33792,"byte_end":33868,"line_start":123,"line_end":123,"column_start":5,"column_end":81}},{"value":"/ *probably* fail, but may succeed.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33873,"byte_end":33910,"line_start":124,"line_end":124,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33915,"byte_end":33918,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This allows a caller to avoid creating the task if the call to `spawn`","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":33923,"byte_end":33997,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ has a high likelihood of failing.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34002,"byte_end":34039,"line_start":127,"line_end":127,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34044,"byte_end":34047,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34052,"byte_end":34064,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34069,"byte_end":34072,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This function must not panic. Implementers must ensure that panics do","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34077,"byte_end":34150,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ not happen.","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34155,"byte_end":34170,"line_start":132,"line_end":132,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34175,"byte_end":34178,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34183,"byte_end":34197,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34202,"byte_end":34205,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34210,"byte_end":34221,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/ # extern crate futures;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34226,"byte_end":34253,"line_start":137,"line_end":137,"column_start":5,"column_end":32}},{"value":"/ # extern crate tokio_executor;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34258,"byte_end":34292,"line_start":138,"line_end":138,"column_start":5,"column_end":39}},{"value":"/ # use tokio_executor::TypedExecutor;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34297,"byte_end":34337,"line_start":139,"line_end":139,"column_start":5,"column_end":45}},{"value":"/ # use futures::{Future, Poll};","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34342,"byte_end":34376,"line_start":140,"line_end":140,"column_start":5,"column_end":39}},{"value":"/ fn example<T>(my_executor: &mut T)","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34381,"byte_end":34419,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ where","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34424,"byte_end":34433,"line_start":142,"line_end":142,"column_start":5,"column_end":14}},{"value":"/     T: TypedExecutor<MyFuture>,","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34438,"byte_end":34473,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34478,"byte_end":34483,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/     if my_executor.status().is_ok() {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34488,"byte_end":34529,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/         my_executor.spawn(MyFuture).unwrap();","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34534,"byte_end":34583,"line_start":146,"line_end":146,"column_start":5,"column_end":54}},{"value":"/     } else {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34588,"byte_end":34604,"line_start":147,"line_end":147,"column_start":5,"column_end":21}},{"value":"/         println!(\"the executor is not in a good state\");","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34609,"byte_end":34669,"line_start":148,"line_end":148,"column_start":5,"column_end":65}},{"value":"/     }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34674,"byte_end":34683,"line_start":149,"line_end":149,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34688,"byte_end":34693,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34698,"byte_end":34701,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture;","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34706,"byte_end":34726,"line_start":152,"line_end":152,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34731,"byte_end":34734,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34739,"byte_end":34769,"line_start":154,"line_end":154,"column_start":5,"column_end":35}},{"value":"/     type Item = ();","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34774,"byte_end":34797,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/     type Error = ();","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34802,"byte_end":34826,"line_start":156,"line_end":156,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34831,"byte_end":34834,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/     fn poll(&mut self) -> Poll<(), ()> {","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34839,"byte_end":34883,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/         println!(\"running on the executor\");","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34888,"byte_end":34936,"line_start":159,"line_end":159,"column_start":5,"column_end":53}},{"value":"/         Ok(().into())","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34941,"byte_end":34966,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34971,"byte_end":34980,"line_start":161,"line_end":161,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34985,"byte_end":34990,"line_start":162,"line_end":162,"column_start":5,"column_end":10}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":34995,"byte_end":35013,"line_start":163,"line_end":163,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":35018,"byte_end":35025,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3308,"byte_end":3318,"line_start":24,"line_end":24,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3520,"byte_end":3530,"line_start":32,"line_end":32,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3664,"byte_end":3674,"line_start":38,"line_end":38,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":4953,"byte_end":4958,"line_start":81,"line_end":81,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":5377,"byte_end":5382,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":6196,"byte_end":6201,"line_start":132,"line_end":132,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":6327,"byte_end":6332,"line_start":138,"line_end":138,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":6737,"byte_end":6738,"line_start":160,"line_end":160,"column_start":42,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7367,"byte_end":7377,"line_start":18,"line_end":18,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":8020,"byte_end":8030,"line_start":40,"line_end":40,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":8164,"byte_end":8174,"line_start":46,"line_end":46,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13537,"byte_end":13540,"line_start":140,"line_end":140,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14667,"byte_end":14682,"line_start":29,"line_end":29,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":16508,"byte_end":16523,"line_start":79,"line_end":79,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":17018,"byte_end":17033,"line_start":94,"line_end":94,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":17350,"byte_end":17365,"line_start":107,"line_end":107,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":20404,"byte_end":20409,"line_start":202,"line_end":202,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":21889,"byte_end":21901,"line_start":254,"line_end":254,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27624,"byte_end":27627,"line_start":131,"line_end":131,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27716,"byte_end":27719,"line_start":137,"line_end":137,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28840,"byte_end":28850,"line_start":180,"line_end":180,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":29392,"byte_end":29402,"line_start":200,"line_end":200,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":29958,"byte_end":29970,"line_start":222,"line_end":222,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":35131,"byte_end":35134,"line_start":170,"line_end":170,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/lib.rs","byte_start":2566,"byte_end":2570,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":159}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3308,"byte_end":3318,"line_start":24,"line_end":24,"column_start":21,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3520,"byte_end":3530,"line_start":32,"line_end":32,"column_start":23,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":9562}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":3664,"byte_end":3674,"line_start":38,"line_end":38,"column_start":16,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":26},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":4953,"byte_end":4958,"line_start":81,"line_end":81,"column_start":19,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":5377,"byte_end":5382,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":23},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":6196,"byte_end":6201,"line_start":132,"line_end":132,"column_start":21,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":6327,"byte_end":6332,"line_start":138,"line_end":138,"column_start":15,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/enter.rs","byte_start":6737,"byte_end":6738,"line_start":160,"line_end":160,"column_start":42,"column_end":43},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":60},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":7367,"byte_end":7377,"line_start":18,"line_end":18,"column_start":6,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":8020,"byte_end":8030,"line_start":40,"line_end":40,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":9562}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/error.rs","byte_start":8164,"byte_end":8174,"line_start":46,"line_end":46,"column_start":16,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":263},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/executor.rs","byte_start":13537,"byte_end":13540,"line_start":140,"line_end":140,"column_start":41,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":14667,"byte_end":14682,"line_start":29,"line_end":29,"column_start":6,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":16508,"byte_end":16523,"line_start":79,"line_end":79,"column_start":26,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":267},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":17018,"byte_end":17033,"line_start":94,"line_end":94,"column_start":37,"column_end":52},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":267},"to":{"krate":0,"index":212}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":17350,"byte_end":17365,"line_start":107,"line_end":107,"column_start":33,"column_end":48},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":267},"to":{"krate":21,"index":812}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":20404,"byte_end":20409,"line_start":202,"line_end":202,"column_start":27,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":146},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/global.rs","byte_start":21889,"byte_end":21901,"line_start":254,"line_end":254,"column_start":15,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":273},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27042,"byte_end":27046,"line_start":113,"line_end":113,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27049,"byte_end":27053,"line_start":113,"line_end":113,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27624,"byte_end":27627,"line_start":131,"line_end":131,"column_start":17,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":27716,"byte_end":27719,"line_start":137,"line_end":137,"column_start":17,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":28840,"byte_end":28850,"line_start":180,"line_end":180,"column_start":6,"column_end":16},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":29392,"byte_end":29402,"line_start":200,"line_end":200,"column_start":15,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":292},"to":{"krate":0,"index":179}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/park.rs","byte_start":29958,"byte_end":29970,"line_start":222,"line_end":222,"column_start":17,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":300},"to":{"krate":0,"index":185}},{"span":{"file_name":"/Users/gerardyap/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-executor-0.1.10/src/typed.rs","byte_start":35131,"byte_end":35134,"line_start":170,"line_end":170,"column_start":33,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":212}}]}